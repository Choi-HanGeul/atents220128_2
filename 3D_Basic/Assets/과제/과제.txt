3/18
목표 
 - Player가 움직일 때 팔다리를 움직인다.
조건
 - 팔다리가 움직일 때 서로 반대방향으로 움직인다.
 - 멈췃을 때 차렸자세로 돌아와야한다.
방식
 - 애니메이션(메카님)
 - 스크립트


3/21
목표
 - Player가 함정을 밟으면 바닥에서 가시가 올라온다.
조건
 - 함정 영역에 들어가면 가시가 올라온다.
 - 함정 영역에서 나가면 가시가 내려간다.


3/22
목표
 - 비행기 오브젝트 만들고 프로팰러 돌리기
 - (추가) 비행기가 특정 두 위치를 왕복하게 만들기
조건
 - propellerOn 변수가 true일때만 프로팰러가 돌아간다.


3/23
목표
 - 자동문 만들기
 - (추가) 수동문 만들기
조건
 1. TestScene_Door씬에 문 만들기
 2. 플레이어가 문 앞에가면 자동으로 문이 열린다.
 3. 플레이어가 문에서 벗어나면 자동으로 문이 닫힌다.
 4. (추가) 플레이어가 문 앞에서 스페이스를 누르면 문이 열린다.
 5. (추가) 플레이어가 열린문 앞에서 스페이스를 누르면 문이 닫힌다.


3/24
목표
 - 스위치를 사용하면 열리는 문 만들기
조건
 1. 스위치와 문은 서로 다른 게임 오브젝트이다.
 2. 스위치나 문이 상대방을 변수로 가지는 것은 가능.


3/29
TraceTurret 코드 읽고 이해해보기


3/30
목표
 - 변수 int gunCount의 값에 따라 플레이 버튼을 누르면 자동으로 Gun이 추가되도록 작성
 

3/31
목표
 - Turret.cs 클래스를 객체지향적으로 리팩토링하기 위한 설계를 진행한다.
 - 기반 클래스 설계(맴버 변수와 함수 설정)
 - 파생 클래스 설계(가지수, 맴버 변수와 함수 설정)


4/1
목표
 1. 생성되는 Bullet을 가지고 있을 빈 오브젝트(UsedBullet) 하나 생성
    (총알이 생성되면 UsedBullet의 자식 오브젝트가 된다.)
 2. Bullet용 메모리 풀을 만들기
    (FakeFleppyBird 코드 참조
     https://github.com/go2665/atents220128)


4/5
목표
 - Enemy에 추적 기능 만들기
   1. Enemy에서 일정범위 안에 Player가 있으면 Player쪽으로 이동
   2. Player가 일정범위를 벗어나면 다시 순찰 계속


4/6
목표 
 1. Enemy 클래스의 CheckObstacle() 함수 완성하기
    Enemy와 Player 사이에 장애물이 있으면 true, 아니면 false를 리턴한다.
 2. NavMeshObstacle 컴포넌트와 Switch 프리팹을 이용해서 스위치를 사용하면 
    NPC가 지나갈 수 있는 통로가 열리는 게임 오브젝트 작성


4/7
목표
 - 대상을 부드럽게 추적하는 카메라 만들기(FollowCamera)
 - Lerp, Slerp  함수를 이용해서 처리